{"version":3,"sources":["../../../app/components/App/Features.jsx"],"names":["Features","props","state","perRowXs","perRowMd","perRowLg","features","panel","panelStyle","minHeight","forEach","f","idx","link_path","name","photo_url","reportname","reportLink","subhead","galleryname","galleryPhotoLink","push","Component","mapStateToProps","ownProps","city"],"mappings":";;;;;;;;AAAA;;;;AAEA;;AAIA;;AACA;;AAEA;;;;;;;;;;;;IAEMA,Q;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BAES;AACR;;AAEA,UAAMC,WAAW,CAAjB;AACA,UAAMC,WAAW,CAAjB;AACA,UAAMC,WAAW,CAAjB;;AAEA,UAAIC,WAAW,EAAf;AACA,UAAIC,cAAJ;AACA,UAAIC,aAAa,EAAEC,WAAW,OAAb,EAAjB;AACA,UAAI,KAAKR,KAAL,CAAWK,QAAf,EAAyB;AACvB,aAAKL,KAAL,CAAWK,QAAX,CAAoBI,OAApB,CAA4B,UAACC,CAAD,EAAIC,GAAJ,EAAY;AACtC,cAAID,EAAEE,SAAN,EAAiB;AACfN,oBACE;AAAA;AAAA,gBAAO,OAAOC,UAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,oBAAM,IAAIG,EAAEE,SAAZ;AAA0BF,oBAAEG;AAA5B;AAAJ,eADF;AAEIH,gBAAEI,SAAF,GAAc,uCAAK,KAAKJ,EAAEI,SAAZ,EAAuB,KAAI,EAA3B,GAAd,GAAiD;AAFrD,aADF;AAKD,WAND,MAMO,IAAIJ,EAAEK,UAAN,EAAkB;AACvBT,oBACE;AAAA;AAAA,gBAAO,OAAOC,UAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,oBAAM,IAAI,oBAAUS,UAAV,CAAqBN,EAAEK,UAAvB,CAAV;AAAkDL,oBAAEG;AAApD;AAAJ,eADF;AAEE,qDAAK,KAAKH,EAAEI,SAAZ,EAAuB,KAAKJ,EAAEG,IAA9B,GAFF;AAGE,uDAHF;AAIIH,gBAAEO;AAJN,aADF;AAOD,WARM,MAQA,IAAIP,EAAEQ,WAAN,EAAmB;AACxBZ,oBACE;AAAA;AAAA,gBAAO,OAAOC,UAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,oBAAM,IAAI,oBAAUY,gBAAV,CAA2BT,EAAEQ,WAA7B,CAAV;AAAyDR,oBAAEG;AAA3D;AAAJ,eADF;AAEE,qDAAK,KAAKH,EAAEI,SAAZ,EAAuB,KAAKJ,EAAEG,IAA9B,GAFF;AAGE,uDAHF;AAIIH,gBAAEO;AAJN,aADF;AAOD;AACDZ,mBAASe,IAAT,CAAc;AAAA;AAAA,cAAK,KAAKT,GAAV,EAAe,IAAI,KAAGR,QAAtB,EAAgC,IAAI,KAAGC,QAAvC,EAAiD,IAAI,KAAGF,QAAxD;AAAqEI;AAArE,WAAd;AACD,SAzBD;AA0BD;;AAED,aAAQ;AAAA;AAAA;AAAOD;AAAP,OAAR;AACD;;;;EA/CoB,gBAAMgB,S;;AAkD7B,SAASC,eAAT,CAAyBrB,KAAzB,EAAgCsB,QAAhC,EAA0C;AACxC,SAAO;AACLC,UAAMvB,MAAMuB;AADP,GAAP;AAGD;;kBAEc,yBAAQF,eAAR,EAAyBvB,QAAzB,C","file":"Features.js","sourcesContent":["import React from 'react'\n\nimport { Grid, Row, Col,\n         Panel,\n} from 'react-bootstrap'\n\nimport { connect } from 'react-redux'\nimport { Link }    from 'react-router'\n\nimport AppRouter from './AppRouter'\n\nclass Features extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render () {\n    // console.log('+++ +++ features props:', this.props, this.state)\n\n    const perRowXs = 1\n    const perRowMd = 2\n    const perRowLg = 2\n\n    let features = []\n    let panel\n    let panelStyle = { minHeight: '200px' }\n    if (this.props.features) {\n      this.props.features.forEach((f, idx) => {\n        if (f.link_path) {\n          panel = (\n            <Panel style={panelStyle}>\n              <h3><Link to={f.link_path} >{ f.name }</Link></h3>\n              { f.photo_url ? <img src={f.photo_url} alt='' /> : null }\n            </Panel>)\n        } else if (f.reportname) {\n          panel = (\n            <Panel style={panelStyle}>\n              <h3><Link to={AppRouter.reportLink(f.reportname)}  >{ f.name }</Link></h3>\n              <img src={f.photo_url} alt={f.name} />\n              <br />\n              { f.subhead }\n            </Panel>)\n        } else if (f.galleryname) {\n          panel = (\n            <Panel style={panelStyle}>\n              <h3><Link to={AppRouter.galleryPhotoLink(f.galleryname)}  >{ f.name }</Link></h3>\n              <img src={f.photo_url} alt={f.name} />\n              <br />\n              { f.subhead }\n            </Panel>)\n        }\n        features.push(<Col key={idx} md={12/perRowMd} lg={12/perRowLg} xs={12/perRowXs} >{ panel }</Col>)\n      })\n    }\n\n    return (<Row>{ features }</Row>)\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    city: state.city,\n  }\n}\n\nexport default connect(mapStateToProps)(Features)\n\n      \n      \n"]}