{"version":3,"sources":["../../../app/components/App/Profile.jsx"],"names":["MyGalleries","Component","Profile","props","handleSubmit","e","preventDefault","fetch","updateProfile","method","headers","Headers","body","JSON","stringify","user_profile","state","profile","accessToken","then","r","json","console","log","_data","handleCityChange","current_city_id","target","value","handleAboutChange","about","handleSelect","setState","Object","assign","activeKey","cities","menuContent","my","galleries","reports","videos","nextProps","citiesOptions","keys","length","forEach","city","idx","push","id","name","email","width","borderTop","mapStateToProps","ownProps"],"mappings":"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","file":"Profile.js","sourcesContent":["import React from 'react'\n\nimport Center from '../Center'\n\nimport { Grid, Row, Col,\n         Panel,\n         Button,\n         Nav, NavItem,\n} from 'react-bootstrap'\n\nimport { connect } from 'react-redux'\n\nimport { citiesIndex, profileAction } from '../../actions'\n\nimport TgmApi from './TgmApi'\n\nimport { Link } from 'react-router'\n\nimport { MyReports } from '../Profile'\n\n/**\n * Galleries\n */\nclass MyGalleries extends React.Component {\n  render () {\n    return(\n      <div>\n        <Center><h1>Galleries</h1></Center>\n      </div>)\n  }\n}\n\n/**\n * Profile\n */\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { profile: {},\n                   cities: [],\n                   activeKey: 'galleries',\n                   menuContent: <MyGalleries />,\n                   my: {\n                     galleries: [],\n                     reports: [],\n                     videos: [],\n                   },\n    }\n  }\n\n  componentDidMount(nextProps) {\n    console.log(\"+++ +++ profile nextProps:\", nextProps)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('+++ +++ profile will receive props:', nextProps)\n    this.setState(Object.assign({}, this.state, { profile: nextProps.profile }))\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(TgmApi.updateProfile, {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify({\n        user_profile: this.state.profile,\n        accessToken:  this.state.profile.accessToken,\n      })\n    }).then(r => r.json()).then(_data => {\n      console.log('+++ +++ updated profile:', _data)\n    })\n  }\n\n  handleCityChange  = (e) => { this.state.profile.current_city_id = e.target.value }\n  handleAboutChange = (e) => { this.state.profile.about           = e.target.value }\n\n  handleSelect = (e) => {\n    switch (e) {\n      case \"reports\":\n        break\n      case \"galleries\":\n        break\n      default:\n        console.log('+++ +++ handleSelect - this should not happen!', e)\n    }\n    this.setState(Object.assign({}, this.state, { activeKey: e }))\n  }\n\n  render() {\n    console.log(\"+++ +++ Profile render props:\", this.props)\n    console.log(\"+++ +++ Profile render state:\", this.state)\n\n    let menuContent = null\n    switch (this.state.activeKey) {\n      case 'galleries':\n        menuContent = <MyGalleries />\n        break\n      case 'reports':\n        menuContent = <MyReports />\n        break\n      default:\n        console.log('+++ +++ this 234 should never happen')\n    }\n\n    let citiesOptions = []\n    if (Object.keys(this.props.cities).length > 0) {\n      this.props.cities.forEach((city, idx) => {\n        citiesOptions.push(<option key={idx} value={city.id} >{ city.name }</option>)\n      })\n    }\n\n    return (\n      <Grid>\n        <Row>\n\n          <Col xs={12} md={6} mdOffset={3} xsOffset={0} lg={6} lgOffset={0}>\n            <Panel>\n              <Center><h1>My Profile</h1></Center>\n              <form onSubmit={this.handleSubmit}>\n                <Row>\n                  <Col xs={3}>\n                    <img src={`//graph.facebook.com/${this.props.profile.id}/picture`} alt='' />\n                  </Col>\n                  <Col xs={9}>\n                    { this.state.profile.name }\n                    <br />\n                    { this.state.profile.email }\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={12}>\n                    <b>About me:</b><br />\n                    <textarea style={{ width: '100%'}} rows=\"4\" value={this.state.profile.about} \n                              onChange={this.handleAboutChange} />\n                  </Col>\n                  <Col xs={12}>\n                    <b>Current City:</b><br />\n                    <select value={this.state.profile.current_city_id} onChange={this.handleCityChange} >\n                      <option selected={!this.state.profile.current_city_id} disabled>Choose City...</option>\n                      { citiesOptions }\n                    </select>\n                  </Col>\n                  <Col xs={3} xsOffset={9} >\n                    <Button bsStyle=\"primary\" type=\"submit\" value=\"Submit\" >Submit</Button>\n                  </Col>\n                </Row>\n              </form>\n            </Panel>\n          </Col>\n\n          <Col xs={12} md={6} mdOffset={3} xsOffset={0} lg={6} lgOffset={0}>\n            <Nav bsStyle=\"tabs\" activeKey={this.state.activeKey} onSelect={this.handleSelect}>\n              <NavItem eventKey=\"reports\">Reports</NavItem>\n              <NavItem eventKey=\"galleries\">Galleries</NavItem>\n              <NavItem eventKey=\"videos\">Videos</NavItem>\n            </Nav>\n            <Panel style={{ borderTop: 'none' }} >\n              { menuContent }\n            </Panel>\n          </Col>\n\n        </Row>\n      </Grid>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    profile: state.profile,\n    cities:  state.cities,\n  }\n}\n\nexport default connect(mapStateToProps)(Profile)\n\n"]}