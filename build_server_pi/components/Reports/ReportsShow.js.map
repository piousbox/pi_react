{"version":3,"sources":["../../../app/components/Reports/ReportsShow.jsx"],"names":["FacebookShareButton","GooglePlusShareButton","LinkedinShareButton","TwitterShareButton","TelegramShareButton","WhatsappShareButton","PinterestShareButton","VKShareButton","OKShareButton","RedditShareButton","TumblrShareButton","LivejournalShareButton","EmailShareButton","FacebookShareCount","GooglePlusShareCount","LinkedinShareCount","PinterestShareCount","VKShareCount","OKShareCount","RedditShareCount","TumblrShareCount","FacebookIcon","TwitterIcon","TelegramIcon","WhatsappIcon","GooglePlusIcon","LinkedinIcon","PinterestIcon","VKIcon","OKIcon","RedditIcon","TumblrIcon","LivejournalIcon","MailruIcon","EmailIcon","ReportsShow","props","state","report","dispatch","reportname","params","nextProps","setState","Object","assign","console","log","url","domain","reportLink","name","photo_url","margin","subhead","float","padding","width","clear","__html","description","disqusShortname","Component","propTypes","mapStateToProps","ownProps"],"mappings":"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","file":"ReportsShow.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { connect } from 'react-redux'\nimport { Grid, Row, Col } from 'react-bootstrap'\nimport Disqus from 'react-disqus-thread'\nimport { ShareButtons, ShareCounts, generateShareIcon } from 'react-share'\nconst {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  PinterestShareButton,\n  VKShareButton,\n  OKShareButton,\n  RedditShareButton,\n  TumblrShareButton,\n  LivejournalShareButton,\n  EmailShareButton,\n} = ShareButtons\nconst {\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  PinterestShareCount,\n  VKShareCount,\n  OKShareCount,\n  RedditShareCount,\n  TumblrShareCount,\n} = ShareCounts\nconst FacebookIcon = generateShareIcon('facebook');\nconst TwitterIcon = generateShareIcon('twitter');\nconst TelegramIcon = generateShareIcon('telegram');\nconst WhatsappIcon = generateShareIcon('whatsapp');\nconst GooglePlusIcon = generateShareIcon('google');\nconst LinkedinIcon = generateShareIcon('linkedin');\nconst PinterestIcon = generateShareIcon('pinterest');\nconst VKIcon = generateShareIcon('vk');\nconst OKIcon = generateShareIcon('ok');\nconst RedditIcon = generateShareIcon('reddit');\nconst TumblrIcon = generateShareIcon('tumblr');\nconst LivejournalIcon = generateShareIcon('livejournal');\nconst MailruIcon = generateShareIcon('mailru');\nconst EmailIcon = generateShareIcon('email');\nimport DocumentMeta from 'react-document-meta'\nimport { Helmet } from 'react-helmet'\n\nimport config from 'config'\nimport Center from '../Center'\n\nimport { AppRouter } from '../App'\nimport { reportsShow, siteShow } from '../../actions'\n\nimport Meta from '../Meta'\nimport { \n  Clearfix,  \n  // LargeSquare, Leaderboard,\n} from '../App'\n\nclass ReportsShow extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      report: {}\n    }\n    props.dispatch(reportsShow({ reportname: props.params.reportname }))\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // console.log(\"+++ +++ reportsShow received props:\", nextProps)\n\n    this.setState(Object.assign({}, this.state, {report: nextProps.report }))\n  }\n\n  render () {\n    console.log('+++ +++ ReportsShow:', this.props, this.state)\n    let url = `https://${config.domain}${AppRouter.reportLink(this.state.report)}`\n\n    return (\n      <Grid>\n        { this.state.report.name && <Helmet>\n          <meta property=\"og:url\"                content={url} />\n          <meta property=\"og:type\"               content=\"article\" />\n          <meta property=\"og:title\"              content={this.state.report.name} />\n          <meta property=\"og:description\"        content={this.state.report.name} />\n          <meta property=\"og:image\"              content={this.state.report.photo_url} />\n          </Helmet> }\n        <Row>\n          <Col xs={12}>\n            <Center>\n              <h1>{ this.state.report.name }</h1>\n              <Meta item={this.state.report} />\n              \n              <div className=\"social-buttons\">\n                <TwitterShareButton url={url} >\n                  <TwitterIcon size={32} round={true} />\n                </TwitterShareButton>\n                <FacebookShareButton url={url} >  \n                  <FacebookIcon size={32} round={true} />\n                </FacebookShareButton>\n                <p className='socialMediaCount'><FacebookShareCount url={url} /></p>\n                <Clearfix />\n              </div>\n\n            </Center>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={8} xsOffset={2}>\n            <div className=\"subhead\" style={{ margin: '2em 0 2em 0' }} ><i>{this.state.report.subhead}</i></div>\n            <div style={{ float: 'left', padding: '5px', width: '410px', clear: 'right' }}>\n              <img src={this.state.report.photo_url} alt={this.state.report.name} />\n            </div>\n            { /* <div style={{ float: 'left', padding: '5px', width: '350px', clear: 'left' }}><LargeSquare /></div> */ }\n            <div dangerouslySetInnerHTML={{__html: this.state.report.description}} />\n            <br /><br />\n            { /* <Leaderboard /> */ }\n            { this.state.report.name && <Disqus shortname={config.disqusShortname} \n                                           identifier={this.state.report.reportname}\n                                           title={this.state.report.name} \n                                           url={url} /> }\n          </Col>\n        </Row>\n      </Grid>\n    )\n  }\n}\n\nReportsShow.propTypes = {\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    report: state.report,\n  }\n}\n\nexport default connect(mapStateToProps)(ReportsShow)\n\n"]}