{"version":3,"sources":["../../../../app/components/Newsitems/__tests__/NewsitemGallery-test.jsx"],"names":["middlewares","mockStore","describe","it","store1","city","galleries","name","photos","rendered","renderIntoDocument","cityname","gallery","created_at","elem","findDOMNode","tagName","toLowerCase","to","equal"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AAKA;;;;AACA;;;;;;AAJA,IAAMA,cAAc,sBAApB;AACA,IAAMC,YAAY,8BAAeD,WAAf,CAAlB;;AAKAE,SAAS,kBAAT,EAA6B,YAAM;;AAEjCC,KAAG,eAAH,EAAoB,YAAM;AACxB,QAAIC,SAASH,UAAU;AACrBI,YAAM;AACJC,mBAAW,CACT,EAACC,MAAM,MAAP,EAAeC,QAAQ,EAAvB,EADS;AADP;AADe,KAAV,CAAb;AAOA,QAAIC,WAAW,oBAAeC,kBAAf,CACb;AAAA;AAAA,QAAU,OAAON,MAAjB;AAA0B;AACxB,eAAOA,MADiB,EACT,QAAQ,EAACO,UAAU,UAAX,EADC;AAExB,mBAAW,EAAEC,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAX,EAFa;AAGxB,kBAAU,EAACC,YAAY,YAAb,EAHc;AAA1B,KADa,CAAf;AAMA,QAAIC,OAAO,mBAASC,WAAT,CAAqBN,QAArB,CAAX;AACA,sBAAOK,KAAKE,OAAL,CAAaC,WAAb,EAAP,EAAmCC,EAAnC,CAAsCC,KAAtC,CAA4C,KAA5C;AACA;AACD,GAjBD;AAmBD,CArBD","file":"NewsitemGallery-test.js","sourcesContent":["import React          from 'react';\nimport ReactDOM       from 'react-dom'\nimport { expect }     from 'chai'\nimport ReactTestUtils from 'react-dom/test-utils'\nimport { shallow }    from 'enzyme'\nimport { Provider }   from 'react-redux'\nimport configureStore from 'redux-mock-store'\nimport thunk          from 'redux-thunk'\n\nconst middlewares = [thunk]\nconst mockStore = configureStore(middlewares)\n\nimport NewsitemGallery from '../NewsitemGallery'\nimport store from '../../../stores'\n\ndescribe('NewsitemsGallery', () => {\n\n  it('Should render', () => {\n    let store1 = mockStore({\n      city: {\n        galleries: [\n          {name: 'Name', photos: []}\n        ]\n      }\n    })\n    let rendered = ReactTestUtils.renderIntoDocument(\n      <Provider store={store1} ><NewsitemGallery\n        store={store1} params={{cityname: 'cityname'}} \n        galleries={{ gallery: [1, 2, 3] }} \n        newsitem={{created_at: '2018-01-01' }} /></Provider>\n    )\n    let elem = ReactDOM.findDOMNode(rendered)\n    expect(elem.tagName.toLowerCase()).to.equal('div')\n    // expect(elem.querySelector('h2 a').innerHTML).to.eql('Name')\n  })\n\n})\n\n"]}