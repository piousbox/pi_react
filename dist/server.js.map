{"version":3,"sources":["../src/server.jsx"],"names":["store","reducer","thunk","NoMatch","React","Component","App","console","log","props","state","border","Blog","Home","app","server","http","createServer","use","Express","static","exposedHeaders","serverConfig","corsHeaders","handleRender","req","res","params","qs","parse","query","url","html","finalState","getState","send","renderFullPage","preloadedState","JSON","stringify","replace","listen","process","env","PORT","port","address"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,QAAQ,wBAAaC,kBAAb,EAAsB,4BAAiBC,oBAAjB,CAAtB,CAAd;;IAMMC,O;;;;;;;;;;;6BACM;AACR,aAAQ;AAAA;AAAA;AAAA;AAAA,OAAR;AACD;;;;EAHmBC,gBAAMC,S;;IAMtBC,G;;;;;;;;;;;6BACM;AACRC,cAAQC,GAAR,CAAY,wBAAZ,EAAsC,KAAKC,KAA3C,EAAkD,KAAKC,KAAvD;;AAEA,aACE;AAAA;AAAA;AACE;AAAC,kCAAD;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,SADF;AAIE,8CAAI,OAAO,EAAEC,QAAQ,iBAAV,EAAX,GAJF;AAKE;AAAC,gCAAD;AAAA;AACE,wCAAC,qBAAD,IAAO,MAAK,OAAZ,EAAoB,WAAWC,cAA/B,GADF;AAEE,wCAAC,qBAAD,IAAO,MAAK,GAAZ,EAAgB,WAAWC,cAA3B;AAFF;AALF,OADF;AAWD;;;;EAfeT,gBAAMC,S;;AAkBxB,IAAIS,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;AACAA,IAAII,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,QAAf,CAAR;;AAEA;AACAN,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CAAQ,oBAAK;AACZG,kBAAgBC,iBAAaC;AADjB,CAAL,CAAR;;AAIA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAMC,SAASC,aAAGC,KAAH,CAASJ,IAAIK,KAAb,CAAf;;AAEAvB,UAAQC,GAAR,CAAY,UAAZ,EAAwBiB,IAAIM,GAA5B;;AAEA,MAAMC,OAAO,4BACX;AAAC,gCAAD;AAAA,MAAc,UAAUP,IAAIM,GAA5B,EAAiC,SAAS,EAA1C;AACE,kCAAC,GAAD;AADF,GADW,CAAb;;AAMA,MAAME,aAAajC,MAAMkC,QAAN,EAAnB;AACAR,MAAIS,IAAJ,CAASC,eAAeJ,IAAf,EAAqBC,UAArB,CAAT;AACD;AACDnB,IAAII,GAAJ,CAAQM,YAAR;;AAEA,SAASY,cAAT,CAAwBJ,IAAxB,EAA8BK,cAA9B,EAA8C;AAC5C,mKAOuBL,IAPvB,4PAWuCM,KAAKC,SAAL,CAAeF,cAAf,EAA+BG,OAA/B,CAAuC,IAAvC,EAA6C,SAA7C,CAXvC;AAiBD;;AAED1B,IAAIC,MAAJ,CAAW0B,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBtB,iBAAauB,IAAnD,EAAyD,YAAM;AAC7DtC,UAAQC,GAAR,sBAA+BM,IAAIC,MAAJ,CAAW+B,OAAX,GAAqBD,IAApD;AACD,CAFD;;kBAIe/B,G","file":"server.js","sourcesContent":["import http from 'http'\nimport Express from 'express'\nimport cors from 'cors'\nimport morgan from 'morgan'\nimport bodyParser from 'body-parser'\nimport qs from 'qs'\n\nimport ReactDOM from 'react-dom'\nimport { renderToString } from 'react-dom/server'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { StaticRouter, Route, Switch } from 'react-router-dom'\n\nimport config from 'config'\nimport serverConfig from './config.json'\nimport api from './api'\nimport initializeDb from './db'\nimport middleware from './middleware'\nimport reducer from './reducers'\nimport MainNavigation from './MainNavigation'\nimport routes from './routes'\nimport Home from './Home'\nimport Blog from './Blog'\n\nconst store = createStore( reducer, applyMiddleware( thunk ) )\n\n\n\n\n\nclass NoMatch extends React.Component {\n  render () {\n    return (<div>no match</div>)\n  }\n}\n\nclass App extends React.Component {\n  render () {\n    console.log('+++ +++ server.js App:', this.props, this.state)\n\n    return (\n      <div>\n        <MainNavigation>\n          <div>inside main nav</div>\n        </MainNavigation>\n        <hr style={{ border: '1px solid green' }} />\n        <Switch>\n          <Route path=\"/blog\" component={Blog} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </div>)\n  }\n}\n\nlet app = Express()\napp.server = http.createServer(app)\napp.use(Express.static('static'))\n\n// logger\napp.use(morgan('dev'))\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: serverConfig.corsHeaders\n}))\n\nfunction handleRender(req, res) {\n  const params = qs.parse(req.query)\n\n  console.log('+++ url:', req.url)\n\n  const html = renderToString(\n    <StaticRouter location={req.url} context={{}}>\n      <App />\n    </StaticRouter>\n  )\n\n  const finalState = store.getState()\n  res.send(renderFullPage(html, finalState))\n}\napp.use(handleRender)\n\nfunction renderFullPage(html, preloadedState) {\n  return `\n    <!doctype html>\n    <html>\n      <head>\n        <title>Redux Universal Example</title>\n      </head>\n      <body>\n        <div id=\"root\">${html}</div>\n        <script>\n          // WARNING: See the following for security issues around embedding JSON in HTML:\n          // http://redux.js.org/recipes/ServerRendering.html#security-considerations\n          window.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(/</g, '\\\\u003c')}\n        </script>\n        <script src=\"/static/bundle.js\"></script>\n      </body>\n    </html>\n  `\n}\n\napp.server.listen(process.env.PORT || serverConfig.port, () => {\n  console.log(`Started on port ${app.server.address().port}`)\n})\n\nexport default app\n"]}