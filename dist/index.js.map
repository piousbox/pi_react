{"version":3,"sources":["../src/index.js"],"names":["console","log","config2","App","React","Component","app","server","http","createServer","store","getState","use","exposedHeaders","config","corsHeaders","handleRender","req","res","params","qs","parse","query","counter","parseInt","preloadedState","html","finalState","send","renderFullPage","JSON","stringify","replace","listen","process","env","PORT","port","address"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;AACAA,QAAQC,GAAR,CAAY,aAAZ,EAA2BC,gBAA3B;;IAEMC,G;;;;;;;;;;;6BACM;AACR,aAAQ;AAAA;AAAA;AAAA;AAAA,OAAR;AACD;;;;EAHeC,gBAAMC,S;;AAMxB,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACA,IAAII,QAAQ;AACVC,YAAU,oBAAM;AAAE,WAAO,EAAP;AAAW;;AAG/B;AAJY,CAAZ,CAKAL,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAN,IAAIM,GAAJ,CAAQ,oBAAK;AACZC,kBAAgBC,iBAAOC;AADX,CAAL,CAAR;;AAIA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAMC,SAAOC,aAAGC,KAAH,CAASJ,IAAIK,KAAb,CAAb;;AAEA,MAAMC,UAAUC,SAASL,OAAOI,OAAhB,EAAyB,EAAzB,KAAgC,CAAhD;AACA,MAAIE,iBAAiB,EAAEF;;AAEvB;AAFqB,GAArB,CAGA,IAAMG,OAAO,4BACX;AAAC,wBAAD;AAAA,MAAU,OAAOhB,KAAjB;AACE,kCAAC,GAAD;AADF,GADW,CAAb;;AAMA,MAAMiB,aAAajB,MAAMC,QAAN,EAAnB;AACAO,MAAIU,IAAJ,CAASC,eAAeH,IAAf,EAAqBC,UAArB,CAAT;AACD;AACDrB,IAAIM,GAAJ,CAAQI,YAAR;;AAEA,SAASa,cAAT,CAAwBH,IAAxB,EAA8BD,cAA9B,EAA8C;AAC5C,mKAOuBC,IAPvB,4PAWuCI,KAAKC,SAAL,CAAeN,cAAf,EAA+BO,OAA/B,CAAuC,IAAvC,EAA6C,SAA7C,CAXvC;AAiBD;;AAED1B,IAAIC,MAAJ,CAAW0B,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBtB,iBAAOuB,IAA7C,EAAmD,YAAM;AACvDrC,UAAQC,GAAR,sBAA+BK,IAAIC,MAAJ,CAAW+B,OAAX,GAAqBD,IAApD;AACD,CAFD;;kBAIe/B,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\nimport ReactDOM from 'react-dom'\nimport qs from 'qs'\nimport { createStore } from 'redux'\nimport { renderToString } from 'react-dom/server'\nimport { Provider } from 'react-redux'\nimport React from 'react'\n\nimport config2 from 'config2'\nconsole.log('+++ config:', config2)\n\nclass App extends React.Component {\n  render () {\n    return (<div>App render 2!</div>)\n  }\n}\n\nlet app = express();\napp.server = http.createServer(app);\n\n// import store from 'app/stores'\nlet store = {\n  getState: () => { return {} }\n}\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders\n}));\n\nfunction handleRender(req, res) {\n  const params=qs.parse(req.query)\n\n  const counter = parseInt(params.counter, 10) || 0\n  let preloadedState = { counter }\n\n  // const store = createStore({})\n  const html = renderToString(\n    <Provider store={store} >\n      <App />\n    </Provider>\n  )\n\n  const finalState = store.getState()\n  res.send(renderFullPage(html, finalState))\n}\napp.use(handleRender)\n\nfunction renderFullPage(html, preloadedState) {\n  return `\n    <!doctype html>\n    <html>\n      <head>\n        <title>Redux Universal Example</title>\n      </head>\n      <body>\n        <div id=\"root\">${html}</div>\n        <script>\n          // WARNING: See the following for security issues around embedding JSON in HTML:\n          // http://redux.js.org/recipes/ServerRendering.html#security-considerations\n          window.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(/</g, '\\\\u003c')}\n        </script>\n        <script src=\"/static/bundle.js\"></script>\n      </body>\n    </html>\n  `\n}\n\napp.server.listen(process.env.PORT || config.port, () => {\n  console.log(`Started on port ${app.server.address().port}`);\n});\n\nexport default app;\n"]}